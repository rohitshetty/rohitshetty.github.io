name: GitHub Pages

on:
  push:
    branches:
      - main # Set a branch name to trigger deployment
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      # Restore previously cached images to speed up builds
      - name: Restore image cache
        id: cache-images
        uses: actions/cache@v3
        with:
          # All downloaded images live inside the content directory
          path: |
            content
          # Cache key changes when any images.yml file is modified
          key: images-${{ runner.os }}-${{ hashFiles('**/images.yml') }}
          # Fallback to the most recent cache even if the hash changes
          restore-keys: |
            images-${{ runner.os }}-

      - name: Read .env
        id: hugo-version
        run: |
          . ./.env
          echo "::set-output name=HUGO_VERSION::${HUGO_VERSION}"

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "${{ steps.hugo-version.outputs.HUGO_VERSION }}"
          extended: true


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: get caller identity2
        run: |
          aws sts get-caller-identity

      # Install npm dependencies for the downloader script
      - name: Install script dependencies
        run: make build_scripts

      # Download only images that are not already present (fast when cache hit)
      - name: Download_content
        run: node scripts/index.js -d ./content --development
      - name: Build 
        run: make build_hugo


      - name: Deploy to S3
        run: |
          aws s3 sync ./public s3://blog-kernelanxiety --delete
      - name: Invalidate Cloudfront 
        run: | 
          aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"

      # - name: Deploy
      #   uses: peaceiris/actions-gh-pages@v3
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./public
      #     user_name: "github-actions[bot]"
      #     user_email: "github-actions[bot]@users.noreply.github.com"
      #     commit_message: ${{ github.event.head_commit.message }}
